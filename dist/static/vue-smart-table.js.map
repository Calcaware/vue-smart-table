{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///static/vue-smart-table.js","webpack:///webpack/bootstrap 1c7e214b1a1d3c17e3a6","webpack:///./src/vue-smart-table.js","webpack:///./src/components/ModalCore.vue","webpack:///ModalCore.vue","webpack:///PlainText.vue","webpack:///SmartTable.vue","webpack:///Modal.vue","webpack:///ModalEdit.vue","webpack:///./src/components/Modal.vue?7a13","webpack:///./src/components/ModalCore.vue?faaa","webpack:///./src/components/ModalEdit.vue?1397","webpack:///./src/components/SmartTable.vue?2fdb","webpack:///./src/components/PlainText.vue?28a1","webpack:///./src/components/Modal.vue","webpack:///./src/components/ModalEdit.vue","webpack:///./src/components/PlainText.vue","webpack:///./src/components/SmartTable.vue","webpack:///./~/vue/dist/vue.common.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","SmartTable","window","Vue","component","__vue_script__","__vue_template__","__esModule","options","template","Object","defineProperty","value","props","methods","close","onClose","ready","_this","document","addEventListener","e","show","keyCode","data","undefined","newValue","col","editable","mode","computed","classes","acc","push","join","cancel","save","$parent","put","edit","$nextTick","$el","querySelector","focus","_interopRequireDefault","obj","default","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_typeof","Symbol","iterator","constructor","_Modal","_Modal2","_ModalEdit","_ModalEdit2","_PlainText","_PlainText2","_vue","_vue2","components","Modal","ModalEdit","toggleAll","action","selection","error","modalEdit","backMatrix","newRowInput","scrolledPast","filters","orderKey","reverseOrder","additionalTdClasses","mandatory","tableClasses","type","String","autoLoad","Boolean","autoRefresh","canFilterBy","header","orderBy","idCol","required","delete","footer","bodyPath","body","actions","endpoint","labelCol","addRow","tableClassesProcessed","processedFooter","mandatoryFields","keys","tableHeader","filter","isMandatoryField","canSaveNewRow","_this2","every","validate","editableFields","_this3","isEditable","actionsArePresent","_this4","bodyKeys","columns","concat","Set","apply","map","row","test","forEach","colKey","mainCol","indexOf","processedSmartBody","getDataFromDotNotation","d","split","reduce","o","numericCompare","row1","row2","valA","vmThis","valB","lexicographicCompare","r","_this5","counter","idValue","smartBody","JSON","stringify","toLowerCase","model","finalRow","realColValue","altIdValue","_id","lexicographical","everyRowIsNonNumeric","isNumeric","sort","shouldShowId","span","beforeCompile","_this6","lenght","console","warn","orderByObj","el","actionsObj","open","compiled","refresh","updateInjectedValues","watch","tdClasses","additionalTdClass","_this7","$dispatch","$http","get","then","response","retBody","set","$set","status","maybeRefresh","openFilter","column","saveNewRow","_this8","post","resource","byId","_this9","customChildrenByCol","$children","getAttribute","parentElement","match","querySelectorAll","CSS","escape","cell","child","log","PlainTextConstructor","extend","parent","$mount","rowId","find","toggleAllRows","next","_this10","actionKey","actionLabel","selectionKeyLabel","selectedRow","rowLabel","key","label","a","commandToBeConfirmed","$broadcast","doCommand","command","onSuccess","onFailure","remove","_this11","httpRESTreq","arguments","isPlainObject","doOrderBy","canOrderBy","orderClass","closedModalEdit","n","isFinite","events","save-value","_ModalCore","_ModalCore2","ModalCore","problem","_command","short","long","confirm","prev","_modalEdit","currentValue","previousValue","global","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","isReserved","str","charCodeAt","_toString","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","classify","classifyRE","bind","fn","ctx","l","toArray","list","start","ret","to","isObject","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","cancellable","cb","cancelled","looseEqual","Cache","limit","size","head","tail","_keymap","create","pushFilter","lastFilterIndex","trim","tokens","filterTokenRE","name","processFilterArg","dir","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","inSingle","inDouble","curly","square","paren","expression","escapeRegex","regexEscapeRE","compileRegex","config","delimiters","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","query","inDoc","node","doc","ownerDocument","documentElement","parentNode","nodeType","contains","getAttr","_attr","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on","event","useCapture","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","guardProps","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","mixin","mixinOptions","prototype","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","_init","$root","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","_updateRef","_callHook","_initState","_initEvents","getPathCharType","ch","code","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","noop","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","queue","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","Math","floor","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","k","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","update","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","_initDOMHooks","hook","$emit","noop$1","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","some","source","lifecycleAPI","$compile","limitBy","filterBy","search","delimiter","convertArray","item","$value","$key","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","observer","textNode","characterData","entry","shift","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version"],"mappings":"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EAMnC/E,eACEiF,YAAcC,MAAOR,aMvGxBS,UAAAP,cNwGGtC,KAAM,WACJ,OACE8C,WMvGP,ENwGOC,OMvGP9C,ONwGO+C,aACAC,OMvGP,ENwGOC,UMvGPjD,ONwGOkD,cACAC,eACAC,cMvGP,ENwGOC,WACAC,SMvGPtD,ONwGOuD,cMvGP,ENwGOC,uBACAC,eAGJrE,OACEsE,cACEC,KMtGPC,ONuGOvC,UMrGP,mBNuGKwC,SMtGLC,QNuGKC,YMtGLD,QNuGKE,YMtGLxC,MNuGKyC,QAAShF,OMtGduC,ONuGK0C,SAAU1C,MMtGfvC,QNuGKkF,OACER,KMtGPC,ONuGOQ,UMtGP,ENuGO/C,UMrGP,ONuGKgD,UACEV,KMtGPG,QNuGOzC,WMrGP,GNuGKiD,QACEF,UMrGP,GNuGKG,UACEZ,KMtGPC,ONuGOvC,UMrGP,QNuGKmD,MACEb,KMtGPnC,MNuGO4C,UMtGP,ENuGO/C,UMrGPrB,QNuGKyE,SAAUxF,OMtGfuC,ONuGKkD,UACEf,KMtGPC,ONuGOvC,UMrGP,yBNuGKsD,UACEhB,KMtGPC,ONuGOvC,UMrGP,QNuGKlB,UACEwD,KMtGPnC,MNuGOH,UAAS,WACP,WAGJuD,QACEjB,KMtGPG,QNuGOzC,WMpGP,INuGGhB,UACEwE,sBAAuB,WACrB,MAAIhH,MAAKqG,aACA,YAAcrG,KMtG9B6F,aNwGgB7F,KMtGhB6F,cNyGKoB,gBAAiB,WACf,MAAoB9E,UAAhBnC,KAAKyG,UAGLzG,KAAKyG,OAAOrC,cAAgBT,MAC1B3D,KAAKyG,OAAO1C,OMtGzB,GAAA/D,KAAAyG,OAAA,GAAArC,cAAAT,MNuGkB3D,KMrGlByG,QNuGmBzG,KMrGnByG,QNwGoC,WAAzBxC,EAAQjE,KAAKyG,QACRzG,KMrGhByG,ONoGO,QAIFS,gBAAiB,WMnGtB,GAAAtF,GAAA5B,INsGO,OAAOoB,QAAO+F,KAAKnH,KAAKoH,aAAaC,OAAO,SAAUhF,GACpD,MAAOT,GAAM0F,iBMtGtBjF,MNyGKkF,cAAe,WMrGpB,GAAAC,GAAAxH,INwGO,OAAOA,MAAKkH,gBAAgBO,MAAM,SAAUpF,GAC1C,MAAOmF,GAAOE,SAASrF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","file":"static/vue-smart-table.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SmartTable\"] = factory();\n\telse\n\t\troot[\"SmartTable\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SmartTable\"] = factory();\n\telse\n\t\troot[\"SmartTable\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar SmartTable = __webpack_require__(20);\n\twindow.SmartTable = SmartTable;\n\tif (typeof window !== 'undefined' && window.Vue) {\n\t  window.Vue.component('smart-table', SmartTable);\n\t}\n\t\n\tmodule.exports = SmartTable;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(8)\n\t__vue_script__ = __webpack_require__(2)\n\t__vue_template__ = __webpack_require__(13)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  props: ['show', 'onClose'],\n\t  methods: {\n\t    close: function close() {\n\t      this.onClose();\n\t    }\n\t  },\n\t  ready: function ready() {\n\t    var _this = this;\n\t\n\t    document.addEventListener('keydown', function (e) {\n\t      if (_this.show && e.keyCode === 27) {\n\t        _this.onClose();\n\t      }\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      value: undefined,\n\t      newValue: undefined,\n\t      id: undefined,\n\t      col: undefined,\n\t      editable: true,\n\t      mode: 'readOnly'\n\t    };\n\t  },\n\t\n\t  computed: {\n\t    classes: function classes() {\n\t      var acc = [];\n\t      if (this.editable && this.mode === 'readOnly') {\n\t        acc.push('pointer-cursor full-height');\n\t      }\n\t      if (this.mode === 'edit' || this.mode === 'saving') {\n\t        acc.push('ui input');\n\t        acc.push('padding');\n\t        acc.push('input-group');\n\t      }\n\t      return acc.join(' ');\n\t    }\n\t  },\n\t  methods: {\n\t    cancel: function cancel() {\n\t      if (this.mode === 'edit') {\n\t        this.mode = 'readOnly';\n\t        this.newValue = undefined;\n\t      }\n\t    },\n\t    save: function save() {\n\t      if (this.mode === 'edit') {\n\t        this.$parent.put({ value: this.newValue, id: this.id, col: this.col });\n\t      }\n\t    },\n\t    edit: function edit() {\n\t      var _this = this;\n\t\n\t      if (this.editable) {\n\t        this.mode = 'edit';\n\t        this.newValue = this.value;\n\t        this.$nextTick(function () {\n\t          _this.$el.querySelector('input').focus();\n\t        });\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _Modal = __webpack_require__(17);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tvar _ModalEdit = __webpack_require__(18);\n\t\n\tvar _ModalEdit2 = _interopRequireDefault(_ModalEdit);\n\t\n\tvar _PlainText = __webpack_require__(19);\n\t\n\tvar _PlainText2 = _interopRequireDefault(_PlainText);\n\t\n\tvar _vue = __webpack_require__(21);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\texports.default = {\n\t  components: { Modal: _Modal2.default, ModalEdit: _ModalEdit2.default },\n\t  data: function data() {\n\t    return {\n\t      toggleAll: false,\n\t      action: undefined,\n\t      selection: [],\n\t      error: false,\n\t      modalEdit: undefined,\n\t      backMatrix: {},\n\t      newRowInput: {},\n\t      scrolledPast: false,\n\t      filters: {},\n\t      orderKey: undefined,\n\t      reverseOrder: false,\n\t      additionalTdClasses: [],\n\t      mandatory: [] };\n\t  },\n\t\n\t  props: {\n\t    tableClasses: {\n\t      type: String,\n\t      default: 'ui celled table'\n\t    },\n\t    autoLoad: Boolean,\n\t    autoRefresh: Boolean,\n\t    canFilterBy: Array,\n\t    header: [Object, Array],\n\t    orderBy: [Array, Object],\n\t    idCol: {\n\t      type: String,\n\t      required: false,\n\t      default: '_id'\n\t    },\n\t    'delete': {\n\t      type: Boolean,\n\t      default: false\n\t    },\n\t    footer: {\n\t      required: false\n\t    },\n\t    bodyPath: {\n\t      type: String,\n\t      default: 'body'\n\t    },\n\t    body: {\n\t      type: Array,\n\t      required: false,\n\t      default: undefined\n\t    },\n\t    actions: [Object, Array],\n\t    endpoint: {\n\t      type: String,\n\t      default: 'http://localhost:8080'\n\t    },\n\t    labelCol: {\n\t      type: String,\n\t      default: 'name'\n\t    },\n\t    editable: {\n\t      type: Array,\n\t      default: function _default() {\n\t        return [];\n\t      }\n\t    },\n\t    addRow: {\n\t      type: Boolean,\n\t      default: false\n\t    }\n\t  },\n\t  computed: {\n\t    tableClassesProcessed: function tableClassesProcessed() {\n\t      if (this.orderBy !== {}) {\n\t        return 'sortable ' + this.tableClasses;\n\t      } else {\n\t        return this.tableClasses;\n\t      }\n\t    },\n\t    processedFooter: function processedFooter() {\n\t      if (this.footer === undefined) {\n\t        return [];\n\t      }\n\t      if (this.footer.constructor === Array) {\n\t        if (this.footer.length > 0 && this.footer[0].constructor === Array) {\n\t          return this.footer;\n\t        } else {\n\t          return [this.footer];\n\t        }\n\t      }\n\t      if (_typeof(this.footer) === 'object') {\n\t        return this.footer;\n\t      }\n\t    },\n\t    mandatoryFields: function mandatoryFields() {\n\t      var _this = this;\n\t\n\t      return Object.keys(this.tableHeader).filter(function (col) {\n\t        return _this.isMandatoryField(col);\n\t      });\n\t    },\n\t    canSaveNewRow: function canSaveNewRow() {\n\t      var _this2 = this;\n\t\n\t      return this.mandatoryFields.every(function (col) {\n\t        return _this2.validate(col, _this2.newRowInput[col]);\n\t      }) && this.addRow;\n\t    },\n\t    editableFields: function editableFields() {\n\t      var _this3 = this;\n\t\n\t      return Object.keys(this.tableHeader).filter(function (col) {\n\t        return _this3.isEditable(col);\n\t      });\n\t    },\n\t    actionsArePresent: function actionsArePresent() {\n\t      if (Array.isArray(this.actions) && this.actions.length > 0) {\n\t        return true;\n\t      }\n\t      if (this.actions instanceof Object && Object.keys(this.actions).length > 0) {\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t    tableHeader: function tableHeader() {\n\t      var _this4 = this;\n\t\n\t      if (this.body === undefined) {\n\t        this.body = [];\n\t      }\n\t\n\t      if (this.header !== undefined && !Array.isArray(this.header)) {\n\t        return this.header;\n\t      }\n\t\n\t      var bodyKeys = Object.keys(this.body);\n\t      if (bodyKeys.length < 1) {\n\t        return {};\n\t      }\n\t      var header = {};\n\t      var columns = [].concat(_toConsumableArray(new Set([].concat.apply([], this.body.map(function (row) {\n\t        return Object.keys(row);\n\t      })))));\n\t\n\t      columns = columns.filter(function (col) {\n\t        return !/^_/.test(col);\n\t      });\n\t\n\t      columns.forEach(function (colKey, i) {\n\t        if (_this4.header === undefined) {\n\t          header[colKey] = colKey;\n\t        } else {\n\t          header[colKey] = _this4.header[i];\n\t        }\n\t      });\n\t\n\t      return header;\n\t    },\n\t    mainCol: function mainCol() {\n\t      if (Object.keys(this.tableHeader).indexOf(this.labelCol) === -1) {\n\t        return Object.keys(this.tableHeader)[0];\n\t      } else {\n\t        return this.labelCol;\n\t      }\n\t    },\n\t    processedSmartBody: function processedSmartBody() {\n\t      var _this5 = this;\n\t\n\t      function getDataFromDotNotation(d, row) {\n\t        return d.split('.').reduce(function (o, i) {\n\t          return o[i];\n\t        }, row);\n\t      }\n\t\n\t      if (this.body === undefined) {\n\t        this.body = [];\n\t      }\n\t\n\t      var counter = 0;\n\t      this.body.forEach(function (row) {\n\t        var idValue = getDataFromDotNotation(_this5.idCol, row);\n\t        if ((idValue === undefined || idValue === null) && (row[_this5.idCol] === undefined || row[_this5.idCol] === null)) {\n\t          row[_this5.idCol] = 'smart_' + counter++;\n\t        }\n\t      });\n\t\n\t      var smartBody = [];\n\t\n\t      this.body.forEach(function (row) {\n\t        if (Object.keys(row).every(function (col) {\n\t          return Object.keys(_this5.filters).every(function (filter) {\n\t            return filter !== col || JSON.stringify(row[col]).toLowerCase().indexOf(_this5.filters[filter].model.toLowerCase()) !== -1;\n\t          });\n\t        })) {\n\t          (function () {\n\t            var finalRow = {};\n\t            Object.keys(_this5.tableHeader).forEach(function (col) {\n\t              var realColValue = {};\n\t              if (/\\+/.test(col)) {\n\t                col.split('+').forEach(function (d) {\n\t                  realColValue[d] = getDataFromDotNotation(d, row);\n\t                });\n\t              } else {\n\t                realColValue = getDataFromDotNotation(col, row);\n\t              }\n\t              finalRow[col] = realColValue;\n\t            });\n\t            var idValue = getDataFromDotNotation(_this5.idCol, row);\n\t            var altIdValue = row[_this5.idCol];\n\t            finalRow._id = String(idValue || altIdValue);\n\t            smartBody.push(finalRow);\n\t          })();\n\t        }\n\t      });\n\t\n\t      var vmThis = this;\n\t      function numericCompare(row1, row2) {\n\t        var valA = row1[vmThis.orderKey];\n\t        var valB = row2[vmThis.orderKey];\n\t        if (valA === undefined || valB === undefined) {\n\t          return 0;\n\t        }\n\t        return (valA - valB) * (vmThis.reverseOrder ? -1 : 1);\n\t      }\n\t      function lexicographicCompare(row1, row2) {\n\t        var valA = row1[vmThis.orderKey];\n\t        var valB = row2[vmThis.orderKey];\n\t        if (valA === undefined || valB === undefined) {\n\t          return 0;\n\t        }\n\t        var r = valA > valB ? 1 : -1;\n\t        return r * (vmThis.reverseOrder ? -1 : 1);\n\t      }\n\t\n\t      if (this.orderKey !== undefined && Object.keys(this.tableHeader).indexOf(this.orderKey) !== -1 && Object.keys(this.orderBy).indexOf(this.orderKey) !== -1) {\n\t        var lexicographical = this.orderBy[this.orderKey].lexicographical;\n\t        var everyRowIsNonNumeric = smartBody.every(function (r) {\n\t          return !_this5.isNumeric(r[_this5.orderKey]);\n\t        });\n\t        if (lexicographical === true || everyRowIsNonNumeric) {\n\t          smartBody.sort(lexicographicCompare);\n\t        } else {\n\t          smartBody.sort(numericCompare);\n\t        }\n\t      }\n\t      return smartBody;\n\t    },\n\t    shouldShowId: function shouldShowId() {\n\t      return Object.keys(this.tableHeader).indexOf('_id') !== -1;\n\t    },\n\t    span: function span() {\n\t      return Object.keys(this.tableHeader).length + 1 + (this.delete ? 1 : 0);\n\t    }\n\t  },\n\t  beforeCompile: function beforeCompile() {\n\t    var _this6 = this;\n\t\n\t    if ((this.body === undefined || this.body.lenght < 1) && this.autoLoad === false) {\n\t      console.warn('Body passed is empty, if you want to load data set auto-load to true');\n\t    }\n\t\n\t    if (Array.isArray(this.orderBy)) {\n\t      var orderByObj = {};\n\t      this.orderBy.forEach(function (el) {\n\t        orderByObj[el] = {};\n\t      });\n\t      this.orderBy = orderByObj;\n\t    }\n\t    if (this.orderBy === undefined) {\n\t      this.orderBy = {};\n\t    }\n\t\n\t    if (Array.isArray(this.actions)) {\n\t      var actionsObj = {};\n\t      this.actions.forEach(function (el) {\n\t        return actionsObj[el] = el;\n\t      });\n\t      this.actions = actionsObj;\n\t    }\n\t    if (this.actions === undefined) {\n\t      this.actions = {};\n\t    }\n\t\n\t    if (Array.isArray(this.canFilterBy)) {\n\t      (function () {\n\t        var acc = {};\n\t        _this6.canFilterBy.forEach(function (col) {\n\t          return acc[col] = { open: false, model: '' };\n\t        });\n\t        _this6.filters = acc;\n\t      })();\n\t    }\n\t  },\n\t  compiled: function compiled() {\n\t    if (this.autoLoad === true) {\n\t      this.refresh();\n\t    } else {\n\t      this.updateInjectedValues();\n\t    }\n\t  },\n\t\n\t  watch: {\n\t    'body': function body() {\n\t      this.updateInjectedValues();\n\t    }\n\t  },\n\t  methods: {\n\t    tdClasses: function tdClasses(col, id) {\n\t      var acc = '';\n\t      if (this.isEditable(col)) {\n\t        acc += 'selectable ';\n\t      }\n\t      if (this.additionalTdClasses[col] === undefined) {\n\t        this.additionalTdClasses[col] = [];\n\t      }\n\t      if (this.additionalTdClasses[col][id] === undefined) {\n\t        this.additionalTdClasses[col][id] = [];\n\t      }\n\t      this.additionalTdClasses[col][id].forEach(function (additionalTdClass) {\n\t        return acc += ' ' + additionalTdClass;\n\t      });\n\t      return acc;\n\t    },\n\t    refresh: function refresh() {\n\t      var _this7 = this;\n\t\n\t      this.$dispatch('before-request');\n\t      this.$http.get(this.endpoint).then(function (response) {\n\t        var retBody = [];\n\t        if (_this7.bodyPath.length === 0) {\n\t          retBody = response.data;\n\t        } else {\n\t          retBody = response.data[_this7.bodyPath];\n\t        }\n\t        _vue2.default.set(_this7, 'body', retBody);\n\t        _this7.$set('footer', response.data.footer);\n\t        _this7.$dispatch('successful-request');\n\t        _this7.$dispatch('after-request');\n\t        _this7.$set('error', false);\n\t        _this7.updateInjectedValues();\n\t      }, function (response) {\n\t        _this7.$set('error', { status: response.status, data: response.data.error });\n\t        _this7.$dispatch('failed-request');\n\t        _this7.$dispatch('after-request');\n\t      });\n\t    },\n\t    maybeRefresh: function maybeRefresh() {\n\t      if (this.autoRefresh) {\n\t        this.refresh();\n\t      }\n\t    },\n\t    openFilter: function openFilter(column) {\n\t      this.filters[column].open = true;\n\t    },\n\t    saveNewRow: function saveNewRow() {\n\t      var _this8 = this;\n\t\n\t      if (this.canSaveNewRow) {\n\t        this.$dispatch('before-request');\n\t        this.$http.post(this.endpoint, { action: 'addRow', resource: this.newRowInput }).then(function (response) {\n\t          _this8.$set('error', false);\n\t          _this8.$set('body', response.data.body);\n\t          _this8.$dispatch('successful-request');\n\t          _this8.$dispatch('after-request');\n\t          _this8.maybeRefresh();\n\t        }, function (response) {\n\t          _this8.$set('error', { status: response.status, data: response.data });\n\t          _this8.$dispatch('failed-request');\n\t          _this8.$dispatch('after-request');\n\t        });\n\t      }\n\t    },\n\t    validate: function validate(col, value) {\n\t      return value !== undefined && value !== '';\n\t    },\n\t    updateInjectedValues: function updateInjectedValues() {\n\t      var _this9 = this;\n\t\n\t      var customChildrenByCol = {};\n\t      this.$children.forEach(function (c) {\n\t        if (typeof c.$el.getAttribute === 'function' && c.$el.getAttribute('slot') !== null) {\n\t          var id = c.$el.parentElement.id.match(/^value-([a-zA-Z0-9 ._-]+)-/)[1];\n\t          var col = c.$el.parentElement.id.match(/^value-[a-zA-Z0-9 ._-]+-([a-zA-Z0-9.+]+)$/)[1];\n\t          if (customChildrenByCol[col] === undefined) {\n\t            customChildrenByCol[col] = {};\n\t          }\n\t          customChildrenByCol[col][id] = c;\n\t        }\n\t      });\n\t      var columns = Object.keys(this.tableHeader);\n\t      function byId(id) {\n\t        return function (row) {\n\t          return row._id === id;\n\t        };\n\t      }\n\t      columns.forEach(function (col) {\n\t        _this9.$el.querySelectorAll('.cell-' + CSS.escape(col)).forEach(function (cell) {\n\t          var child = void 0;\n\t          var id = cell.id.match(/^cell-([a-zA-Z0-9 ._-]+)-/)[1];\n\t          if (customChildrenByCol[col] !== undefined && customChildrenByCol[col][id] !== undefined) {\n\t            child = customChildrenByCol[col][id];\n\t          } else {\n\t            console.log('no custom child component in col ' + col + ' with id that matches ' + cell.id.match(/^cell-([a-zA-Z0-9 ._-]+)-/)[1]);\n\t            var PlainTextConstructor = _vue2.default.extend(_PlainText2.default);\n\t            child = new PlainTextConstructor({\n\t              parent: _this9\n\t            });\n\t            if (_this9.$el.querySelector('#' + CSS.escape(cell.id) + ' div') === undefined) {\n\t              console.error('could not find element \"#' + cell.id + ' div\"');\n\t              return;\n\t            }\n\t            child.$mount('#' + CSS.escape(cell.id) + ' div');\n\t          }\n\t          if (child === undefined) {\n\t            console.error('no child component found for id ' + cell.id.match(/^cell-([a-zA-Z0-9 ._-]+)-/)[1]);\n\t            return;\n\t          }\n\t          console.log('mounted component in ' + '#' + cell.id + ' div');\n\t          var rowId = child.$el.parentElement.id.match(/^(?:value|cell)-([a-zA-Z0-9 ._-]+)-/)[1];\n\t          var row = _this9.processedSmartBody.find(byId(rowId));\n\t          _vue2.default.set(child, 'id', rowId);\n\t          _vue2.default.set(child, 'col', col);\n\t          _vue2.default.set(child, 'value', row[col]);\n\t          _vue2.default.set(child, 'editable', _this9.isEditable(col));\n\t          _vue2.default.set(child, 'mandatory', _this9.isMandatoryField(col));\n\t          if (_this9.additionalTdClasses[col] === undefined) {\n\t            _this9.additionalTdClasses[col] = [];\n\t          }\n\t          _this9.additionalTdClasses[col][rowId] = child.tdClasses || [];\n\t        });\n\t      });\n\t    },\n\t    toggleAllRows: function toggleAllRows() {\n\t      if (this.toggleAll === false) {\n\t        this.toggleAll = true;\n\t        this.selection = Object.keys(this.processedSmartBody);\n\t      } else {\n\t        this.toggleAll = false;\n\t        this.selection = [];\n\t      }\n\t    },\n\t    next: function next() {\n\t      var _this10 = this;\n\t\n\t      var actionKey = this.action;\n\t      var actionLabel = this.actions[this.action];\n\t      var selectionKeyLabel = this.selection.map(function (rowId) {\n\t        var selectedRow = _this10.processedSmartBody.filter(function (row) {\n\t          return row._id === rowId;\n\t        })[0];\n\t        if (selectedRow !== undefined) {\n\t          var rowLabel = selectedRow[_this10.mainCol];\n\t          return { key: rowId, label: rowLabel };\n\t        } else {\n\t          return null;\n\t        }\n\t      }).filter(function (a) {\n\t        return a !== null;\n\t      });\n\t      var commandToBeConfirmed = { action: { key: actionKey, label: actionLabel }, selection: selectionKeyLabel };\n\t      this.$broadcast('command', commandToBeConfirmed);\n\t    },\n\t    doCommand: function doCommand(command) {\n\t      this.$dispatch('before-request');\n\t\n\t      if (/^(_remove|_delete)$/i.test(command.action)) {\n\t        this.$http.delete(this.endpoint, command).then(this.onSuccess, this.onFailure);\n\t      } else {\n\t        this.$http.get(this.endpoint, command).then(this.onSuccess, this.onFailure);\n\t      }\n\t    },\n\t    remove: function remove(id) {\n\t      this.$dispatch('before-request');\n\t\n\t      this.$http.delete(this.endpoint + '/' + id).then(this.onSuccess, this.onFailure);\n\t    },\n\t    isEditable: function isEditable(col) {\n\t      return this.editable.indexOf(col) !== -1;\n\t    },\n\t    put: function put(resource) {\n\t      var _this11 = this;\n\t\n\t      var httpRESTreq = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\t\n\t      this.$dispatch('before-request');\n\t      var child = this.$children.find(function (c) {\n\t        return c.id === resource.id && c.col === resource.col;\n\t      });\n\t      if (child === undefined) {\n\t        console.error('Children with id ' + resource.id + ' was not found');\n\t        return;\n\t      }\n\t      _vue2.default.set(child, 'mode', 'saving');\n\t      if (httpRESTreq) {\n\t        this.$http.put(this.endpoint + '/' + resource.id + '/' + resource.col, {\n\t          action: 'edit',\n\t          value: resource.value\n\t        }).then(function (response) {\n\t          _vue2.default.set(child, 'mode', 'readOnly');\n\t          _this11.$dispatch('successful-request');\n\t          _this11.$dispatch('after-request');\n\t          _this11.$set('error', false);\n\t          _this11.maybeRefresh();\n\t        }, function (response) {\n\t          _vue2.default.set(child, 'mode', 'readOnly');\n\t          _this11.$set('error', { status: response.status, data: response.data.error });\n\t          _this11.$dispatch('failed-request');\n\t          _this11.$dispatch('after-request');\n\t        });\n\t      }\n\t    },\n\t    isPlainObject: function isPlainObject(obj) {\n\t      return obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object';\n\t    },\n\t    isMandatoryField: function isMandatoryField(col) {\n\t      if (this.mandatory[col] === false) {\n\t        return false;\n\t      }\n\t      return this.mandatory[col] || this.isEditable(col);\n\t    },\n\t    doOrderBy: function doOrderBy(col) {\n\t      if (this.canOrderBy(col)) {\n\t        return;\n\t      }\n\t      if (this.orderKey === col) {\n\t        this.reverseOrder = !this.reverseOrder;\n\t      } else {\n\t        this.reverseOrder = false;\n\t      }\n\t      this.orderKey = col;\n\t    },\n\t    orderClass: function orderClass(col) {\n\t      if (this.orderKey === col && this.reverseOrder === false) {\n\t        return 'sorted ascending';\n\t      }\n\t      if (this.orderKey === col && this.reverseOrder === true) {\n\t        return 'sorted descending';\n\t      }\n\t      return '';\n\t    },\n\t    canOrderBy: function canOrderBy(col) {\n\t      return Object.keys(this.orderBy).indexOf(col) === -1;\n\t    },\n\t    closedModalEdit: function closedModalEdit() {\n\t      this.modalEdit = undefined;\n\t    },\n\t    isNumeric: function isNumeric(n) {\n\t      return !!(+('1' + n) || +(n + '1')) && !Array.isArray(n) && isFinite(n) && n !== '';\n\t    },\n\t    onFailure: function onFailure(response) {\n\t      this.$set('error', { status: response.status, data: response.data.error });\n\t      this.$dispatch('failed-request');\n\t      this.$dispatch('after-request');\n\t    },\n\t    onSuccess: function onSuccess(response) {\n\t      var body = '';\n\t      if (this.bodyPath.length === 0) {\n\t        body = response.data;\n\t      } else {\n\t        body = response.data[this.bodyPath];\n\t      }\n\t      if (body !== undefined || body === {}) {\n\t        this.$set('body', body);\n\t        this.$set('footer', response.data.footer);\n\t      }\n\t      this.$dispatch('successful-request');\n\t      this.$dispatch('after-request');\n\t      this.$set('error', false);\n\t      this.maybeRefresh();\n\t    }\n\t  },\n\t  events: {\n\t    'save-value': function saveValue() {\n\t      console.log('@@@@');\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _ModalCore = __webpack_require__(1);\n\t\n\tvar _ModalCore2 = _interopRequireDefault(_ModalCore);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: { ModalCore: _ModalCore2.default },\n\t  data: function data() {\n\t    return {\n\t      problem: {},\n\t      actionLabel: 'undefined',\n\t      command: {\n\t        action: undefined,\n\t        selection: []\n\t      }\n\t    };\n\t  },\n\t\n\t  props: ['show'],\n\t  events: {\n\t    'command': function command(_command) {\n\t      this.show = true;\n\t      this.command.action = _command.action.key;\n\t      this.actionLabel = _command.action.label;\n\t      this.command.selection = _command.selection;\n\t      this.problem = false;\n\t      if (this.command.action === undefined) {\n\t        this.problem = {\n\t          short: 'No action to perform!',\n\t          long: 'Please select an action from the dropdown menu.'\n\t        };\n\t      } else if (this.command.selection.length === 0) {\n\t        this.problem = {\n\t          short: 'Selection empty!',\n\t          long: 'There is no selection to ' + this.actionLabel + '.'\n\t        };\n\t      }\n\t    }\n\t  },\n\t  methods: {\n\t    close: function close() {\n\t      this.show = false;\n\t    },\n\t    confirm: function confirm() {\n\t      this.$dispatch('confirm', this.command);\n\t      this.close();\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _ModalCore = __webpack_require__(1);\n\t\n\tvar _ModalCore2 = _interopRequireDefault(_ModalCore);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: { ModalCore: _ModalCore2.default },\n\t  data: function data() {\n\t    return {\n\t      value: undefined,\n\t      type: undefined,\n\t      id: undefined,\n\t      col: undefined,\n\t      prev: undefined\n\t    };\n\t  },\n\t\n\t  props: ['show'],\n\t  events: {\n\t    'modalEdit': function modalEdit(_modalEdit) {\n\t      this.show = true;\n\t      this.value = _modalEdit.currentValue;\n\t      this.type = _modalEdit.type;\n\t      this.id = _modalEdit.id;\n\t      this.col = _modalEdit.col;\n\t      this.prev = _modalEdit.previousValue;\n\t    }\n\t  },\n\t  methods: {\n\t    close: function close() {\n\t      this.show = false;\n\t      this.$dispatch('close');\n\t    },\n\t    confirm: function confirm() {\n\t      this.$dispatch('confirm', {\n\t        id: this.id,\n\t        col: this.col,\n\t        currentValue: this.value,\n\t        previousValue: this.prev\n\t      });\n\t      this.close();\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=modal> <modal-core :show.sync=show :on-close=close> <div class=modal-header> <h3 v-show=problem>{{problem.short}}</h3> <h3 v-else>Are you sure?</h3> </div> <div class=\\\"modal-body no-action\\\" v-show=problem> <p>{{{problem.long}}}</p> </div> <div class=modal-body v-else> <p>You will <span class=action-label>{{actionLabel}}</span> the following</p> <ul> <li v-for=\\\"item in command.selection\\\">{{item.label}}</li> </ul> </div> <div class=\\\"modal-footer text-right\\\" v-show=problem> <button class=modal-cancel-button @click=close>Ok</button> </div> <div class=\\\"modal-footer text-right\\\" v-else> <button class=modal-cancel-button @click=close>Cancel</button> <button class=\\\"modal-default-button action-label\\\" @click=confirm(command)> {{actionLabel}} </button> </div> </modal-core> </div>\";\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=modal-core @click=close v-show=show transition=modal> <div class=modal-container @click.stop> <slot></slot> </div> </div>\";\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=modal-edit> <modal-core :show.sync=show :on-close=close> <div id=value-{{id}}-{{col}}-edit class=modal-body> <input v-if=\\\"type !== 'textarea'\\\" type={{type}} v-model=value /> <textarea v-else v-model=value></textarea> </div> <div class=\\\"modal-footer text-right\\\"> <button class=modal-cancel-button @click=close>Cancel</button> <button class=\\\"modal-default-button modal-ok-button action-label\\\" @click=confirm>Save</button> </div> </modal-core> </div>\";\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"smart-table table-responsive\\\"> <modal @confirm=doCommand></modal> <table :class=tableClassesProcessed> <thead> <tr> <th v-if=actionsArePresent> <input class=toggle-all type=checkbox @click=toggleAllRows /> </th> <th v-for=\\\"(column, label) in tableHeader\\\" class=\\\"col-{{column}} col-cell {{canOrderBy(column) ? 'ord' : ''}} {{orderClass(column)}}\\\" @click=doOrderBy(column)> {{label}} <div v-if=filters[column] class=\\\"{{column}}-filter-cue click-cue fa fa-filter\\\" @click=openFilter(column)></div> <div v-if=\\\"filters[column] && filters[column].open\\\" class={{column}}-filter-input> <input type=text v-model=filters[column].model /> </div> </th> <th v-if=delete> </th> </tr> </thead> <tfoot> <tr v-for=\\\"footerRow in processedFooter\\\" class=footer-row> <td v-if=actionsArePresent></td> <td v-for=\\\"footerCell in footerRow\\\" track-by=$index> {{footerCell}} </td> <td v-if=delete></td> </tr> <tr v-if=actionsArePresent class=action-row> <td class=smart-control-bar colspan={{span}}> <span class=bottom-right-corner>&#8990;</span> <select class=actions v-model=action> <option v-for=\\\"(key, label) in actions\\\" value={{key}} class=action-label>{{label}}</option> </select> <button class=action-button @click=next>Next...</button> </td> </tr> </tfoot> <tbody> <tr v-for=\\\"entry in processedSmartBody\\\" class=row-{{entry._id}} track-by=_id> <td v-if=actionsArePresent> <input id=toggle-{{entry._id}} value={{entry._id}} type=checkbox v-model=selection /> </td> <td v-for=\\\"(col, value) in entry\\\" v-if=\\\"col !== '_id'\\\" id=cell-{{entry._id}}-{{col}} :class=\\\"tdClasses(col, entry._id) + 'cell-' + col\\\"> <div id=value-{{entry._id}}-{{col}}> <slot :name=col> {{value}} </slot> </div> </td> <th v-for=\\\"(col, value) in entry\\\" id=cell-{{entry._id}}-{{col}} class=cell-{{col}} scope=row v-if=\\\"col === '_id' && shouldShowId\\\"> <div id=value-{{entry._id}}-_id> <slot name=_id> {{value}} </slot> </div> </th> <td v-if=delete> <button id=delete-{{entry._id}} @click=remove(entry._id)>Delete</button> </td> </tr> <tr v-if=addRow class=row-new> <td v-if=actionsArePresent></td> <td v-for=\\\"(col, label) in tableHeader\\\" id=edit-new-{{col}}> <div :class=\\\"'ui input' + (isMandatoryField(col) ? ' required field' : '')\\\"> <input v-if=isEditable(col) type=text v-model=newRowInput[col] placeholder={{tableHeader[col]}} /> </div> </td> <td v-if=delete></td> </tr> </tbody> </table> <div class=add-row-button v-show=canSaveNewRow><button class=\\\"ui button\\\" @click=saveNewRow>Add Row</button></div> <div class=error-panel v-show=error>{{error | json}}</div> </div>\";\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div :class=classes @click=edit _v-da7c72c2=\\\"\\\"> <input v-if=\\\"mode === 'edit' || mode === 'saving'\\\" type=text v-model=newValue @blur=save @keyup.13=save @keyup.27=cancel :disabled=\\\"mode === 'saving'\\\" _v-da7c72c2=\\\"\\\"> <span v-if=\\\"mode === 'readOnly'\\\" _v-da7c72c2=\\\"\\\">{{value}}</span> </div>\";\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(7)\n\t__vue_script__ = __webpack_require__(5)\n\t__vue_template__ = __webpack_require__(12)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(9)\n\t__vue_script__ = __webpack_require__(6)\n\t__vue_template__ = __webpack_require__(14)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(11)\n\t__vue_script__ = __webpack_require__(3)\n\t__vue_template__ = __webpack_require__(16)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(10)\n\t__vue_script__ = __webpack_require__(4)\n\t__vue_template__ = __webpack_require__(15)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.25\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n\tvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\t\n\t// detecting iOS UIWebView by indexedDB\n\tvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tiosVersionMatch: iosVersionMatch,\n\t\tiosVersion: iosVersion,\n\t\thasMutationObserverBug: hasMutationObserverBug,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (false) {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if (isA || isO) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (!inDoc(el)) {\n\t      return nextTick(this.forceUpdate);\n\t    }\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.25';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** static/vue-smart-table.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1c7e214b1a1d3c17e3a6\n **/","let SmartTable = require('./components/SmartTable.vue')\nwindow.SmartTable = SmartTable\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.component('smart-table', SmartTable)\n}\n\nmodule.exports = SmartTable\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vue-smart-table.js\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./ModalCore.vue\")\n__vue_script__ = require(\"!!babel!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./ModalCore.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./ModalCore.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/ModalCore.vue\n ** module id = 1\n ** module chunks = 0\n **/","<template>\n  <div class=\"modal-core\" @click=\"close\" v-show=\"show\" transition=\"modal\">\n    <div class=\"modal-container\" @click.stop>\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"babel\">\n  export default {\n    props: ['show', 'onClose'],\n    methods: {\n      close () {\n        this.onClose()\n      }\n    },\n    ready () {\n      document.addEventListener('keydown', (e) => {\n        if (this.show && e.keyCode === 27) {\n          this.onClose()\n        }\n      })\n    }\n  }\n</script>\n\n<style>\n  * {\n    box-sizing: border-box;\n  }\n\n  .modal-core {\n    position: fixed;\n    z-index: 9998;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, .5);\n    transition: opacity .3s ease;\n  }\n\n  .modal-container {\n    width: 300px;\n    margin: 40px auto 0;\n    padding: 20px 30px;\n    background-color: #fff;\n    border-radius: 2px;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, .33);\n    transition: all .3s ease;\n    font-family: Helvetica, Arial, sans-serif;\n  }\n\n  .modal-enter,\n  .modal-leave {\n    opacity: 0;\n  }\n\n  .modal-enter .modal-container,\n  .modal-leave .modal-container {\n    -webkit-transform: scale(1.1);\n    transform: scale(1.1);\n  }\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** ModalCore.vue?19352397\n **/","<template>\n  <div :class=\"classes\" @click=\"edit\">\n    <input\n      v-if=\"mode === 'edit' || mode === 'saving'\"\n      type=\"text\" v-model=\"newValue\"\n      @blur=\"save\"\n      @keyup.13=\"save\"\n      @keyup.27=\"cancel\"\n      :disabled=\"mode === 'saving'\"\n    >\n    <span v-if=\"mode === 'readOnly'\">{{value}}</span>\n  </div>\n</template>\n\n<script lang=\"babel\">\n  export default {\n    data () {\n      return {\n        value: undefined,\n        newValue: undefined,\n        id: undefined,\n        col: undefined,\n        editable: true,\n        mode: 'readOnly'\n      }\n    },\n    computed: {\n      classes () {\n        let acc = []\n        if (this.editable && this.mode === 'readOnly') {\n          acc.push('pointer-cursor full-height')\n        }\n        if (this.mode === 'edit' || this.mode === 'saving') {\n          acc.push('ui input') // semantic ui input\n          acc.push('padding') // semantic ui fix\n          acc.push('input-group') // bootstrap\n        }\n        return acc.join(' ')\n      }\n    },\n    methods: {\n      cancel () {\n        if (this.mode === 'edit') {\n          this.mode = 'readOnly'\n          this.newValue = undefined\n        }\n      },\n      save () {\n        if (this.mode === 'edit') {\n          this.$parent.put({value: this.newValue, id: this.id, col: this.col})\n        }\n      },\n      edit () {\n        if (this.editable) {\n          this.mode = 'edit'\n          this.newValue = this.value\n          this.$nextTick(() => {\n            this.$el.querySelector('input').focus()\n          })\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  .pointer-cursor {\n    cursor: pointer;\n  }\n  .full-height {\n    display: flex;\n    padding: 0.71428571em;\n    vertical-align: middle;\n  }\n  .padding {\n    padding: 0.71428571em;\n  }\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** PlainText.vue?43f4ce2c\n **/","<template>\n  <div class=\"smart-table table-responsive\">\n    <modal @confirm=\"doCommand\"></modal>\n    <table :class=\"tableClassesProcessed\">\n      <thead>\n      <tr>\n        <th v-if=\"actionsArePresent\">\n          <input class=\"toggle-all\" type=\"checkbox\" @click=\"toggleAllRows\"/>\n        </th>\n        <th v-for=\"(column, label) in tableHeader\" class=\"col-{{column}} col-cell {{canOrderBy(column) ? 'ord' : ''}} {{orderClass(column)}}\" @click=\"doOrderBy(column)\">\n          {{label}}\n          <div v-if=\"filters[column]\" class=\"{{column}}-filter-cue click-cue fa fa-filter\" @click=\"openFilter(column)\"></div>\n          <div v-if=\"filters[column] && filters[column].open\" class=\"{{column}}-filter-input\">\n            <input type=\"text\" v-model=\"filters[column].model\"/>\n          </div>\n        </th>\n        <th v-if=\"delete\">\n        </th>\n      </tr>\n      </thead>\n      <tfoot>\n      <tr v-for=\"footerRow in processedFooter\" class=\"footer-row\">\n        <td v-if=\"actionsArePresent\"><!-- to match the toggle checkboxes --></td>\n        <td v-for=\"footerCell in footerRow\" track-by=\"$index\">\n          {{footerCell}}\n        </td>\n        <td v-if=\"delete\"></td>\n      </tr>\n      <tr v-if=\"actionsArePresent\" class=\"action-row\">\n        <td class=\"smart-control-bar\" colspan=\"{{span}}\">\n          <span class=\"bottom-right-corner\">&#8990;</span>\n          <select class=\"actions\" v-model=\"action\">\n            <option v-for=\"(key, label) in actions\" value=\"{{key}}\" class=\"action-label\">{{label}}</option>\n          </select>\n          <button class=\"action-button\" @click=\"next\">Next...</button>\n        </td>\n      </tr>\n      </tfoot>\n      <tbody>\n      <tr v-for=\"entry in processedSmartBody\" class=\"row-{{entry._id}}\" track-by=\"_id\">\n        <td v-if=\"actionsArePresent\">\n          <input id=\"toggle-{{entry._id}}\" value=\"{{entry._id}}\" type=\"checkbox\" v-model=\"selection\"/>\n        </td>\n        <td\n          v-for=\"(col, value) in entry\"\n          v-if=\"col !== '_id'\"\n          id=\"cell-{{entry._id}}-{{col}}\"\n          :class=\"tdClasses(col, entry._id) + 'cell-' + col\"\n        >\n          <div id=\"value-{{entry._id}}-{{col}}\">\n            <slot :name=\"col\">\n              {{value}}\n            </slot>\n          </div>\n        </td>\n        <th\n          v-for=\"(col, value) in entry\"\n          id=\"cell-{{entry._id}}-{{col}}\"\n          class=\"cell-{{col}}\"\n          scope=\"row\"\n          v-if=\"col === '_id' && shouldShowId\"\n        >\n          <div id=\"value-{{entry._id}}-_id\">\n            <slot name=\"_id\">\n              {{value}}\n            </slot>\n          </div>\n        </th>\n        <td v-if=\"delete\">\n          <button id=\"delete-{{entry._id}}\" @click=\"remove(entry._id)\">Delete</button>\n        </td>\n      </tr>\n      <tr v-if=\"addRow\" class=\"row-new\">\n        <td v-if=\"actionsArePresent\"><!-- to match the toggle checkboxes --></td>\n        <td\n          v-for=\"(col, label) in tableHeader\"\n          id=\"edit-new-{{col}}\"\n        >\n          <div :class=\"'ui input' + (isMandatoryField(col) ? ' required field' : '')\">\n            <input v-if=\"isEditable(col)\" type=\"text\" v-model=\"newRowInput[col]\" placeholder=\"{{tableHeader[col]}}\"/>\n          </div>\n        </td>\n        <td v-if=\"delete\"></td>\n      </tr>\n      </tbody>\n    </table>\n    <div class=\"add-row-button\" v-show=\"canSaveNewRow\"><button class=\"ui button\" @click=\"saveNewRow\">Add Row</button></div>\n    <div class=\"error-panel\" v-show=\"error\">{{error | json}}</div>\n  </div>\n</template>\n\n<script lang=\"babel\">\n  /* global CSS */\n  import Modal from './Modal'\n  import ModalEdit from './ModalEdit'\n  import PlainText from './PlainText'\n  import Vue from 'vue'\n  export default {\n    components: { Modal, ModalEdit },\n    data () {\n      return {\n        toggleAll: false,\n        action: undefined,\n        selection: [],\n        error: false,\n        modalEdit: undefined,\n        backMatrix: {},\n        newRowInput: {},\n        scrolledPast: false,\n        filters: {},\n        orderKey: undefined,\n        reverseOrder: false,\n        additionalTdClasses: [], // [col][id][class1, class2...]\n        mandatory: [] // [col]true|false\n        // totals: undefined // footer line with totals\n      }\n    },\n    props: {\n      tableClasses: {\n        type: String,\n        default: 'ui celled table'\n      },\n      autoLoad: Boolean,\n      autoRefresh: Boolean,\n      canFilterBy: Array,\n      header: [Object, Array],\n      orderBy: [Array, Object],\n      idCol: {\n        type: String,\n        required: false,\n        default: '_id'\n      },\n      'delete': {\n        type: Boolean,\n        default: false\n      },\n      footer: {\n        required: false\n      },\n      bodyPath: {\n        type: String,\n        default: 'body'\n      },\n      body: {\n        type: Array,\n        required: false,\n        default: undefined\n      },\n      actions: [Object, Array],\n      endpoint: {\n        type: String,\n        default: 'http://localhost:8080'\n      },\n      labelCol: {\n        type: String,\n        default: 'name'\n      },\n      editable: {\n        type: Array,\n        default () {\n          return []\n        }\n      },\n      addRow: {\n        type: Boolean,\n        default: false\n      }\n    },\n    computed: {\n      tableClassesProcessed () {\n        if (this.orderBy !== {}) {\n          return 'sortable ' + this.tableClasses\n        } else {\n          return this.tableClasses\n        }\n      },\n      processedFooter () {\n        if (this.footer === undefined) {\n          return []\n        }\n        if (this.footer.constructor === Array) {\n          if (this.footer.length > 0 &&\n            this.footer[0].constructor === Array) { // this is a matrix\n            return this.footer\n          } else { // this is an array\n            return [this.footer] // now it is also a matrix\n          }\n        }\n        if (typeof this.footer === 'object') {\n          return this.footer\n        }\n      },\n      mandatoryFields () {\n        // console.log('tableHeader(of which mandatory fields are always a subset) is: ' + JSON.stringify(Object.keys(this.tableHeader)) + '\\n' +\n        // 'their mandatoriness is ' + JSON.stringify(Object.keys(this.tableHeader).map(h => this.isMandatoryField(h))))\n        return Object.keys(this.tableHeader).filter(col => this.isMandatoryField(col))\n      },\n      canSaveNewRow () {\n        // console.log('mandatory fields are: ' + JSON.stringify(this.mandatoryFields) + '\\n' +\n        // 'their values are: ' + JSON.stringify(this.mandatoryFields.map(c => this.newRowInput[c])))\n        return this.mandatoryFields.every(col => this.validate(col, this.newRowInput[col])) && this.addRow\n      },\n      // fields that right now are visible and editable and should present themselves in the new row if present\n      editableFields () {\n        return Object.keys(this.tableHeader).filter(col => this.isEditable(col))\n      },\n      actionsArePresent () {\n        if (Array.isArray(this.actions) && this.actions.length > 0) {\n          return true\n        }\n        if (this.actions instanceof Object && Object.keys(this.actions).length > 0) {\n          return true\n        }\n        return false\n      },\n      tableHeader () {\n        // WARNING: must not (and cannot) depend on processedSmartBody!\n\n        if (this.body === undefined) {\n          this.body = []\n        }\n        // if object return object\n        if (this.header !== undefined && !Array.isArray(this.header)) {\n          return this.header\n        }\n        // the header is either an array or undefined\n        var bodyKeys = Object.keys(this.body)\n        if (bodyKeys.length < 1) {\n          return {}\n        }\n        var header = {}\n        let columns = [...new Set([].concat.apply([], this.body.map(row => Object.keys(row))))]\n        // filter hidden columns (columns that start with underscore)\n        columns = columns.filter(col => !/^_/.test(col))\n        // build the tableHeader object\n        columns.forEach((colKey, i) => {\n          if (this.header === undefined) {\n            header[colKey] = colKey\n          } else {\n            header[colKey] = this.header[i]\n          }\n        })\n\n        return header\n      },\n      mainCol () {\n        // choose an appropriate default label column\n        if (Object.keys(this.tableHeader).indexOf(this.labelCol) === -1) {\n          return Object.keys(this.tableHeader)[0]\n        } else {\n          return this.labelCol\n        }\n      },\n      processedSmartBody () {\n        function getDataFromDotNotation (d, row) {\n          return d.split('.').reduce((o, i) => o[i], row)\n        }\n\n        if (this.body === undefined) {\n          this.body = []\n        }\n\n        // at least 1 row has id undefined, add them where it's not present\n        let counter = 0\n        this.body.forEach(row => {\n          let idValue = getDataFromDotNotation(this.idCol, row)\n          if ((idValue === undefined || idValue === null) && (row[this.idCol] === undefined || row[this.idCol] === null)) {\n            row[this.idCol] = 'smart_' + counter++\n          }\n        })\n\n        // filter body using gui filters\n        let smartBody = []\n\n        // filter unwanted rows\n        this.body.forEach(row => {\n          if (Object.keys(row).every(col =>\n            Object.keys(this.filters).every(filter =>\n              (filter !== col) ||\n              (JSON.stringify(row[col]).toLowerCase().indexOf(this.filters[filter].model.toLowerCase()) !== -1)\n            )\n          )) {\n            // filter unwanted columns\n            let finalRow = {}\n            Object.keys(this.tableHeader).forEach(col => {\n              let realColValue = {}\n              if (/\\+/.test(col)) {\n                // it's a composite column will return an object\n                col.split('+').forEach(d => {\n                  realColValue[d] = getDataFromDotNotation(d, row)\n                })\n              } else {\n                realColValue = getDataFromDotNotation(col, row)\n              }\n              finalRow[col] = realColValue\n            })\n            let idValue = getDataFromDotNotation(this.idCol, row)\n            let altIdValue = row[this.idCol]\n            finalRow._id = String(idValue || altIdValue)\n            smartBody.push(finalRow)\n          }\n        })\n\n        let vmThis = this\n        function numericCompare (row1, row2) {\n          let valA = row1[vmThis.orderKey]\n          var valB = row2[vmThis.orderKey]\n          if (valA === undefined || valB === undefined) {\n            return 0\n          }\n          return (valA - valB) * (vmThis.reverseOrder ? -1 : 1)\n        }\n        function lexicographicCompare (row1, row2) {\n          let valA = row1[vmThis.orderKey]\n          var valB = row2[vmThis.orderKey]\n          if (valA === undefined || valB === undefined) {\n            return 0\n          }\n          var r = (valA > valB) ? 1 : -1\n          return r * (vmThis.reverseOrder ? -1 : 1)\n        }\n\n        if (this.orderKey !== undefined &&\n          Object.keys(this.tableHeader).indexOf(this.orderKey) !== -1 &&\n        Object.keys(this.orderBy).indexOf(this.orderKey) !== -1) {\n          var lexicographical = this.orderBy[this.orderKey].lexicographical\n          let everyRowIsNonNumeric = smartBody.every(r => !this.isNumeric(r[this.orderKey]))\n          if (lexicographical === true || everyRowIsNonNumeric) {\n            smartBody.sort(lexicographicCompare)\n          } else {\n            smartBody.sort(numericCompare)\n          }\n        }\n        return smartBody\n      },\n      shouldShowId () {\n        return Object.keys(this.tableHeader).indexOf('_id') !== -1\n      },\n      span () {\n        return Object.keys(this.tableHeader).length + 1 + (this.delete ? 1 : 0)\n      }\n    },\n    beforeCompile () {\n      if ((this.body === undefined || this.body.lenght < 1) && this.autoLoad === false) {\n        console.warn('Body passed is empty, if you want to load data set auto-load to true')\n      }\n\n      // if orderBy is not an object turn it into one\n      if (Array.isArray(this.orderBy)) {\n        var orderByObj = {}\n        this.orderBy.forEach(el => { orderByObj[el] = {} })\n        this.orderBy = orderByObj\n      }\n      if (this.orderBy === undefined) {\n        this.orderBy = {}\n      }\n\n      // if actions is not an object, it doesn't have labels\n      if (Array.isArray(this.actions)) {\n        var actionsObj = {}\n        this.actions.forEach(el => (actionsObj[el] = el))\n        this.actions = actionsObj\n      }\n      if (this.actions === undefined) {\n        this.actions = {}\n      }\n\n      // initialize filters\n      if (Array.isArray(this.canFilterBy)) {\n        let acc = {}\n        this.canFilterBy.forEach(col => (acc[col] = {open: false, model: ''}))\n        this.filters = acc\n      }\n    },\n    compiled () {\n      // load data if auto-load set to true\n      if (this.autoLoad === true) {\n        this.refresh()\n      } else {\n        this.updateInjectedValues()\n      }\n    },\n    watch: {\n      'body' () {\n        this.updateInjectedValues()\n      }\n    },\n    methods: {\n      tdClasses (col, id) {\n        let acc = ''\n        if (this.isEditable(col)) {\n          acc += 'selectable '\n        }\n        if (this.additionalTdClasses[col] === undefined) {\n          this.additionalTdClasses[col] = []\n        }\n        if (this.additionalTdClasses[col][id] === undefined) {\n          this.additionalTdClasses[col][id] = []\n        }\n        this.additionalTdClasses[col][id].forEach(additionalTdClass => (acc += ' ' + additionalTdClass))\n        return acc\n      },\n      refresh () {\n        this.$dispatch('before-request')\n        this.$http.get(this.endpoint).then((response) => {\n          let retBody = []\n          if (this.bodyPath.length === 0) {\n            retBody = response.data\n          } else {\n            retBody = response.data[this.bodyPath]\n          }\n          Vue.set(this, 'body', retBody)\n          this.$set('footer', response.data.footer)\n          this.$dispatch('successful-request')\n          this.$dispatch('after-request')\n          this.$set('error', false)\n          this.updateInjectedValues()\n        }, (response) => {\n          this.$set('error', { status: response.status, data: response.data.error })\n          this.$dispatch('failed-request')\n          this.$dispatch('after-request')\n        })\n      },\n      maybeRefresh () {\n        if (this.autoRefresh) {\n          this.refresh()\n        }\n      },\n      openFilter (column) {\n        this.filters[column].open = true\n      },\n      saveNewRow () {\n        if (this.canSaveNewRow) {\n          this.$dispatch('before-request')\n          this.$http.post(this.endpoint, {action: 'addRow', resource: this.newRowInput}).then((response) => {\n            this.$set('error', false)\n            this.$set('body', response.data.body)\n            this.$dispatch('successful-request')\n            this.$dispatch('after-request')\n            this.maybeRefresh()\n          }, (response) => {\n            this.$set('error', {status: response.status, data: response.data})\n            this.$dispatch('failed-request')\n            this.$dispatch('after-request')\n          })\n        }\n      },\n      validate (col, value) {\n        return (value !== undefined && value !== '')\n        // todo: more complex validation\n      },\n      updateInjectedValues () {\n        let customChildrenByCol = {}\n        this.$children.forEach(c => {\n          if (typeof c.$el.getAttribute === 'function' && c.$el.getAttribute('slot') !== null) {\n            let id = c.$el.parentElement.id.match(/^value-([a-zA-Z0-9 ._-]+)-/)[1]\n            let col = c.$el.parentElement.id.match(/^value-[a-zA-Z0-9 ._-]+-([a-zA-Z0-9.+]+)$/)[1]\n            if (customChildrenByCol[col] === undefined) {\n              customChildrenByCol[col] = {}\n            }\n            customChildrenByCol[col][id] = c\n          }\n        })\n        let columns = Object.keys(this.tableHeader)\n        function byId (id) {\n          return function (row) {\n            return row._id === id\n          }\n        }\n        columns\n          .forEach(col => {\n            this.$el.querySelectorAll('.cell-' + CSS.escape(col)).forEach(cell => {\n              let child\n              let id = cell.id.match(/^cell-([a-zA-Z0-9 ._-]+)-/)[1]\n              if (customChildrenByCol[col] !== undefined && customChildrenByCol[col][id] !== undefined) {\n                child = customChildrenByCol[col][id]\n              } else {\n                console.log('no custom child component in col ' + col + ' with id that matches ' + cell.id.match(/^cell-([a-zA-Z0-9 ._-]+)-/)[1])\n                let PlainTextConstructor = Vue.extend(PlainText)\n                child = new PlainTextConstructor({\n                  parent: this\n                })\n                if (this.$el.querySelector('#' + CSS.escape(cell.id) + ' div') === undefined) {\n                  console.error('could not find element \"#' + cell.id + ' div\"')\n                  return\n                }\n                child.$mount('#' + CSS.escape(cell.id) + ' div')\n              }\n              if (child === undefined) {\n                console.error('no child component found for id ' + cell.id.match(/^cell-([a-zA-Z0-9 ._-]+)-/)[1])\n                return\n              }\n              console.log('mounted component in ' + '#' + cell.id + ' div')\n              let rowId = child.$el.parentElement.id.match(/^(?:value|cell)-([a-zA-Z0-9 ._-]+)-/)[1]\n              let row = this.processedSmartBody.find(byId(rowId))\n              Vue.set(child, 'id', rowId)\n              Vue.set(child, 'col', col)\n              Vue.set(child, 'value', row[col])\n              Vue.set(child, 'editable', this.isEditable(col))\n              Vue.set(child, 'mandatory', this.isMandatoryField(col))\n              if (this.additionalTdClasses[col] === undefined) {\n                this.additionalTdClasses[col] = []\n              }\n              this.additionalTdClasses[col][rowId] = child.tdClasses || []\n            })\n          })\n      },\n      toggleAllRows () {\n        if (this.toggleAll === false) {\n          this.toggleAll = true\n          this.selection = Object.keys(this.processedSmartBody)\n        } else {\n          this.toggleAll = false\n          this.selection = []\n        }\n      },\n      next () {\n        var actionKey = this.action\n        var actionLabel = this.actions[this.action]\n        var selectionKeyLabel = this.selection.map(rowId => {\n          let selectedRow = this.processedSmartBody.filter(row => row._id === rowId)[0]\n          if (selectedRow !== undefined) {\n            let rowLabel = selectedRow[this.mainCol]\n            return {key: rowId, label: rowLabel}\n          } else {\n            return null\n          }\n        }).filter(a => a !== null)\n        var commandToBeConfirmed = { action: { key: actionKey, label: actionLabel }, selection: selectionKeyLabel }\n        this.$broadcast('command', commandToBeConfirmed)\n      },\n      doCommand (command) {\n        this.$dispatch('before-request')\n\n        // special case\n        if (/^(_remove|_delete)$/i.test(command.action)) {\n          this.$http.delete(this.endpoint, command).then(this.onSuccess, this.onFailure)\n        } else {\n          this.$http.get(this.endpoint, command).then(this.onSuccess, this.onFailure)\n        }\n      },\n      remove (id) {\n        this.$dispatch('before-request')\n\n        this.$http.delete(this.endpoint + '/' + id).then(this.onSuccess, this.onFailure)\n      },\n      // this field, if visible, should be editable and present in the new row\n      isEditable (col) {\n        return this.editable.indexOf(col) !== -1\n      },\n      /**\n       *\n       * @param resource {value, id, col}\n       * @param httpRESTreq if false will not propagate PUT request\n         */\n      put (resource, httpRESTreq = true) {\n        this.$dispatch('before-request')\n        let child = this.$children.find(c => c.id === resource.id && c.col === resource.col)\n        if (child === undefined) {\n          console.error('Children with id ' + resource.id + ' was not found')\n          return\n        }\n        Vue.set(child, 'mode', 'saving')\n        if (httpRESTreq) {\n          this.$http.put(this.endpoint + '/' + resource.id + '/' + resource.col, {\n            action: 'edit',\n            value: resource.value\n          }).then((response) => {\n            Vue.set(child, 'mode', 'readOnly')\n            this.$dispatch('successful-request')\n            this.$dispatch('after-request')\n            this.$set('error', false)\n            this.maybeRefresh()\n          }, (response) => {\n            Vue.set(child, 'mode', 'readOnly')\n            this.$set('error', {status: response.status, data: response.data.error})\n            this.$dispatch('failed-request')\n            this.$dispatch('after-request')\n          })\n        }\n      },\n      isPlainObject (obj) {\n        return obj !== null && typeof obj === 'object'\n      },\n      isMandatoryField (col) {\n        if (this.mandatory[col] === false) {\n          // console.log(col + 'is explicitly non mandatory')\n          return false\n        }\n        return this.mandatory[col] || this.isEditable(col)\n        // todo: subject to change\n      },\n      doOrderBy (col) {\n        if (this.canOrderBy(col)) {\n          return\n        }\n        if (this.orderKey === col) {\n          this.reverseOrder = !this.reverseOrder\n        } else {\n          this.reverseOrder = false\n        }\n        this.orderKey = col\n      },\n      orderClass (col) {\n        if (this.orderKey === col && this.reverseOrder === false) {\n          return 'sorted ascending'\n        }\n        if (this.orderKey === col && this.reverseOrder === true) {\n          return 'sorted descending'\n        }\n        return ''\n      },\n      canOrderBy (col) {\n        return Object.keys(this.orderBy).indexOf(col) === -1\n      },\n      closedModalEdit () {\n        this.modalEdit = undefined\n      },\n      isNumeric (n) {\n        return !!(+('1' + n) || +(n + '1')) && !Array.isArray(n) && isFinite(n) && (n !== '')\n      },\n      onFailure (response) {\n        this.$set('error', {status: response.status, data: response.data.error})\n        this.$dispatch('failed-request')\n        this.$dispatch('after-request')\n      },\n      onSuccess (response) {\n        let body = ''\n        if (this.bodyPath.length === 0) {\n          body = response.data\n        } else {\n          body = response.data[this.bodyPath]\n        }\n        if (body !== undefined || body === {}) {\n          this.$set('body', body)\n          this.$set('footer', response.data.footer)\n        }\n        this.$dispatch('successful-request')\n        this.$dispatch('after-request')\n        this.$set('error', false)\n        this.maybeRefresh()\n      }\n    },\n    events: {\n      'save-value' () {\n        console.log('@@@@')\n      }\n    }\n  }\n</script>\n\n<style>\n\n  .bottom-right-corner {\n    font-size: 42px;\n    float: left;\n    height: 1px;\n    top: -25px;\n    position: relative;\n    width: 32px;\n    left: 5px;\n    pointer-events: none;\n    cursor: default;\n  }\n\n  .action-label {\n    text-transform: capitalize;\n  }\n\n  table input[type=\"checkbox\"] {\n    transform: scale(1.4);\n    margin: 0;\n  }\n\n  .error-panel {\n    width: 100%;\n    height: 50px;\n    background-color: #260707;\n    color: #c8999e;\n  }\n\n  .click-cue {\n    width: 1em;\n    height: 1em;\n  }\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** SmartTable.vue?0ef02298\n **/","<template>\n  <div class=\"modal\">\n    <modal-core :show.sync=\"show\" :on-close=\"close\">\n      <div class=\"modal-header\">\n        <h3 v-show=\"problem\">{{problem.short}}</h3>\n        <h3 v-else>Are you sure?</h3>\n      </div>\n\n      <div class=\"modal-body no-action\" v-show=\"problem\">\n        <p>{{{problem.long}}}</p>\n      </div>\n      <div class=\"modal-body\" v-else>\n        <p>You will <span class=\"action-label\">{{actionLabel}}</span> the following</p>\n        <ul>\n          <li v-for=\"item in command.selection\">{{item.label}}</li>\n        </ul>\n      </div>\n\n      <div class=\"modal-footer text-right\" v-show=\"problem\">\n        <button class=\"modal-cancel-button\" @click=\"close\">Ok</button>\n      </div>\n      <div class=\"modal-footer text-right\" v-else>\n        <button class=\"modal-cancel-button\" @click=\"close\">Cancel</button>\n        <button class=\"modal-default-button action-label\" @click=\"confirm(command)\">\n          {{actionLabel}}\n        </button>\n      </div>\n    </modal-core>\n  </div>\n</template>\n\n<script>\n  import ModalCore from './ModalCore'\n  export default {\n    components: { ModalCore },\n    data () {\n      return {\n        problem: {},\n        actionLabel: 'undefined',\n        command: {\n          action: undefined,\n          selection: []\n        }\n      }\n    },\n    props: ['show'],\n    events: {\n      'command' (command) {\n        this.show = true\n        this.command.action = command.action.key\n        this.actionLabel = command.action.label\n        this.command.selection = command.selection\n        this.problem = false\n        if (this.command.action === undefined) {\n          this.problem = {\n            short: 'No action to perform!',\n            long: 'Please select an action from the dropdown menu.'\n          }\n        } else if (this.command.selection.length === 0) {\n          this.problem = {\n            short: 'Selection empty!',\n            long: 'There is no selection to ' + this.actionLabel + '.'\n          }\n        }\n      }\n    },\n    methods: {\n      close () {\n        this.show = false\n      },\n      confirm () {\n        this.$dispatch('confirm', this.command)\n        this.close()\n      }\n    }\n  }\n</script>\n\n<style>\n  * {\n    box-sizing: border-box;\n  }\n\n  .modal-header h3 {\n    margin-top: 0;\n    color: #a9b9ee;\n  }\n\n  .modal-body {\n    margin: 20px 0;\n  }\n\n  .text-right {\n    text-align: right;\n  }\n\n  .form-label {\n    display: block;\n    margin-bottom: 1em;\n  }\n\n  .form-label > .form-control {\n    margin-top: 0.5em;\n  }\n\n  .form-control {\n    display: block;\n    width: 100%;\n    padding: 0.5em 1em;\n    line-height: 1.5;\n    border: 1px solid #aabcfe;\n  }\n\n  .action-label {\n    text-transform: capitalize;\n  }\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Modal.vue?b35ed422\n **/","<template>\n  <div class=\"modal-edit\">\n    <modal-core :show.sync=\"show\" :on-close=\"close\">\n      <div id=\"value-{{id}}-{{col}}-edit\" class=\"modal-body\">\n        <input v-if=\"type !== 'textarea'\" type=\"{{type}}\" v-model=\"value\" />\n        <textarea v-else v-model=\"value\"></textarea>\n      </div>\n      <div class=\"modal-footer text-right\">\n        <button class=\"modal-cancel-button\" @click=\"close\">Cancel</button>\n        <button class=\"modal-default-button modal-ok-button action-label\"\n                @click=\"confirm\"\n        >Save</button>\n      </div>\n    </modal-core>\n  </div>\n</template>\n\n<script>\n  import ModalCore from './ModalCore'\n  export default {\n    components: { ModalCore },\n    data () {\n      return {\n        value: undefined,\n        type: undefined,\n        id: undefined,\n        col: undefined,\n        prev: undefined\n      }\n    },\n    props: ['show'],\n    events: {\n      'modalEdit' (modalEdit) {\n        this.show = true\n        this.value = modalEdit.currentValue\n        this.type = modalEdit.type\n        this.id = modalEdit.id\n        this.col = modalEdit.col\n        this.prev = modalEdit.previousValue\n      }\n    },\n    methods: {\n      close () {\n        this.show = false\n        this.$dispatch('close')\n      },\n      confirm () {\n        this.$dispatch('confirm', {\n          id: this.id,\n          col: this.col,\n          currentValue: this.value,\n          previousValue: this.prev\n        })\n        this.close()\n      }\n    }\n  }\n</script>\n\n<style>\n  * {\n    box-sizing: border-box;\n  }\n\n  .modal-header h3 {\n    margin-top: 0;\n    color: #a9b9ee;\n  }\n\n  .modal-body {\n    margin: 20px 0;\n  }\n\n  .text-right {\n    text-align: right;\n  }\n\n  .form-label {\n    display: block;\n    margin-bottom: 1em;\n  }\n\n  .form-label > .form-control {\n    margin-top: 0.5em;\n  }\n\n  .form-control {\n    display: block;\n    width: 100%;\n    padding: 0.5em 1em;\n    line-height: 1.5;\n    border: 1px solid #aabcfe;\n  }\n\n  .action-label {\n    text-transform: capitalize;\n  }\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** ModalEdit.vue?6b8588a4\n **/","module.exports = \"<div class=modal> <modal-core :show.sync=show :on-close=close> <div class=modal-header> <h3 v-show=problem>{{problem.short}}</h3> <h3 v-else>Are you sure?</h3> </div> <div class=\\\"modal-body no-action\\\" v-show=problem> <p>{{{problem.long}}}</p> </div> <div class=modal-body v-else> <p>You will <span class=action-label>{{actionLabel}}</span> the following</p> <ul> <li v-for=\\\"item in command.selection\\\">{{item.label}}</li> </ul> </div> <div class=\\\"modal-footer text-right\\\" v-show=problem> <button class=modal-cancel-button @click=close>Ok</button> </div> <div class=\\\"modal-footer text-right\\\" v-else> <button class=modal-cancel-button @click=close>Cancel</button> <button class=\\\"modal-default-button action-label\\\" @click=confirm(command)> {{actionLabel}} </button> </div> </modal-core> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Modal.vue\n ** module id = 12\n ** module chunks = 0\n **/","module.exports = \"<div class=modal-core @click=close v-show=show transition=modal> <div class=modal-container @click.stop> <slot></slot> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/ModalCore.vue\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = \"<div class=modal-edit> <modal-core :show.sync=show :on-close=close> <div id=value-{{id}}-{{col}}-edit class=modal-body> <input v-if=\\\"type !== 'textarea'\\\" type={{type}} v-model=value /> <textarea v-else v-model=value></textarea> </div> <div class=\\\"modal-footer text-right\\\"> <button class=modal-cancel-button @click=close>Cancel</button> <button class=\\\"modal-default-button modal-ok-button action-label\\\" @click=confirm>Save</button> </div> </modal-core> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/ModalEdit.vue\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"smart-table table-responsive\\\"> <modal @confirm=doCommand></modal> <table :class=tableClassesProcessed> <thead> <tr> <th v-if=actionsArePresent> <input class=toggle-all type=checkbox @click=toggleAllRows /> </th> <th v-for=\\\"(column, label) in tableHeader\\\" class=\\\"col-{{column}} col-cell {{canOrderBy(column) ? 'ord' : ''}} {{orderClass(column)}}\\\" @click=doOrderBy(column)> {{label}} <div v-if=filters[column] class=\\\"{{column}}-filter-cue click-cue fa fa-filter\\\" @click=openFilter(column)></div> <div v-if=\\\"filters[column] && filters[column].open\\\" class={{column}}-filter-input> <input type=text v-model=filters[column].model /> </div> </th> <th v-if=delete> </th> </tr> </thead> <tfoot> <tr v-for=\\\"footerRow in processedFooter\\\" class=footer-row> <td v-if=actionsArePresent></td> <td v-for=\\\"footerCell in footerRow\\\" track-by=$index> {{footerCell}} </td> <td v-if=delete></td> </tr> <tr v-if=actionsArePresent class=action-row> <td class=smart-control-bar colspan={{span}}> <span class=bottom-right-corner>&#8990;</span> <select class=actions v-model=action> <option v-for=\\\"(key, label) in actions\\\" value={{key}} class=action-label>{{label}}</option> </select> <button class=action-button @click=next>Next...</button> </td> </tr> </tfoot> <tbody> <tr v-for=\\\"entry in processedSmartBody\\\" class=row-{{entry._id}} track-by=_id> <td v-if=actionsArePresent> <input id=toggle-{{entry._id}} value={{entry._id}} type=checkbox v-model=selection /> </td> <td v-for=\\\"(col, value) in entry\\\" v-if=\\\"col !== '_id'\\\" id=cell-{{entry._id}}-{{col}} :class=\\\"tdClasses(col, entry._id) + 'cell-' + col\\\"> <div id=value-{{entry._id}}-{{col}}> <slot :name=col> {{value}} </slot> </div> </td> <th v-for=\\\"(col, value) in entry\\\" id=cell-{{entry._id}}-{{col}} class=cell-{{col}} scope=row v-if=\\\"col === '_id' && shouldShowId\\\"> <div id=value-{{entry._id}}-_id> <slot name=_id> {{value}} </slot> </div> </th> <td v-if=delete> <button id=delete-{{entry._id}} @click=remove(entry._id)>Delete</button> </td> </tr> <tr v-if=addRow class=row-new> <td v-if=actionsArePresent></td> <td v-for=\\\"(col, label) in tableHeader\\\" id=edit-new-{{col}}> <div :class=\\\"'ui input' + (isMandatoryField(col) ? ' required field' : '')\\\"> <input v-if=isEditable(col) type=text v-model=newRowInput[col] placeholder={{tableHeader[col]}} /> </div> </td> <td v-if=delete></td> </tr> </tbody> </table> <div class=add-row-button v-show=canSaveNewRow><button class=\\\"ui button\\\" @click=saveNewRow>Add Row</button></div> <div class=error-panel v-show=error>{{error | json}}</div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/SmartTable.vue\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = \"<div :class=classes @click=edit _v-da7c72c2=\\\"\\\"> <input v-if=\\\"mode === 'edit' || mode === 'saving'\\\" type=text v-model=newValue @blur=save @keyup.13=save @keyup.27=cancel :disabled=\\\"mode === 'saving'\\\" _v-da7c72c2=\\\"\\\"> <span v-if=\\\"mode === 'readOnly'\\\" _v-da7c72c2=\\\"\\\">{{value}}</span> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-da7c72c2!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/PlainText.vue\n ** module id = 16\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Modal.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Modal.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Modal.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Modal.vue\n ** module id = 17\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./ModalEdit.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./ModalEdit.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./ModalEdit.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/ModalEdit.vue\n ** module id = 18\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-da7c72c2&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./PlainText.vue\")\n__vue_script__ = require(\"!!babel!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./PlainText.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-da7c72c2!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./PlainText.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/PlainText.vue\n ** module id = 19\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./SmartTable.vue\")\n__vue_script__ = require(\"!!babel!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./SmartTable.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./SmartTable.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/SmartTable.vue\n ** module id = 20\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.25\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if (isA || isO) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (!inDoc(el)) {\n      return nextTick(this.forceUpdate);\n    }\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.25';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 21\n ** module chunks = 0\n **/"],"sourceRoot":""}